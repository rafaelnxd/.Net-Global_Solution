// <auto-generated />
using System;
using HeatWatch.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace HeatWatch.API.Migrations
{
    [DbContext(typeof(HeatWatchContext))]
    partial class HeatWatchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HeatWatch.API.Entities.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("EventoCalorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Severidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EventoCalorId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.EventoCalor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Intensidade")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RegiaoId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("EventosCalor");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.Regiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Regioes");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.RegistroTemperatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("RegiaoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("TemperaturaCelsius")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("RegistrosTemperatura");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.Alerta", b =>
                {
                    b.HasOne("HeatWatch.API.Entities.EventoCalor", "EventoCalor")
                        .WithMany("Alertas")
                        .HasForeignKey("EventoCalorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventoCalor");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.EventoCalor", b =>
                {
                    b.HasOne("HeatWatch.API.Entities.Regiao", "Regiao")
                        .WithMany("EventosCalor")
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.RegistroTemperatura", b =>
                {
                    b.HasOne("HeatWatch.API.Entities.Regiao", "Regiao")
                        .WithMany("RegistrosTemperatura")
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.EventoCalor", b =>
                {
                    b.Navigation("Alertas");
                });

            modelBuilder.Entity("HeatWatch.API.Entities.Regiao", b =>
                {
                    b.Navigation("EventosCalor");

                    b.Navigation("RegistrosTemperatura");
                });
#pragma warning restore 612, 618
        }
    }
}
